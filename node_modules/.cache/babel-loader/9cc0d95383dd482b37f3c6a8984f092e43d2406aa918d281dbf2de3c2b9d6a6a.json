{"ast":null,"code":"var _jsxFileName = \"/Users/chiangwanyu/code/wanyu0413/react-setup/src/components/Expenses/ExpenseChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = props => {\n  const chartDataPoints = [{\n    labe: \"Jan\",\n    value: 0\n  }, {\n    labe: \"Feb\",\n    value: 0\n  }, {\n    labe: \"Mar\",\n    value: 0\n  }, {\n    labe: \"Apr\",\n    value: 0\n  }, {\n    labe: \"May\",\n    value: 0\n  }, {\n    labe: \"Jun\",\n    value: 0\n  }, {\n    labe: \"Jul\",\n    value: 0\n  }, {\n    labe: \"Aug\",\n    value: 0\n  }, {\n    labe: \"Sep\",\n    value: 0\n  }, {\n    labe: \"Oct\",\n    value: 0\n  }, {\n    labe: \"Nov\",\n    value: 0\n  }, {\n    labe: \"Dec\",\n    value: 0\n  }];\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoint: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpenseChart","props","chartDataPoints","labe","value","expense","expenses","expenseMonth","date","getMonth","amount","dataPoint","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chiangwanyu/code/wanyu0413/react-setup/src/components/Expenses/ExpenseChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\nconst ExpenseChart = (props) => {\n  const chartDataPoints = [\n    { labe: \"Jan\", value: 0 },\n    { labe: \"Feb\", value: 0 },\n    { labe: \"Mar\", value: 0 },\n    { labe: \"Apr\", value: 0 },\n    { labe: \"May\", value: 0 },\n    { labe: \"Jun\", value: 0 },\n    { labe: \"Jul\", value: 0 },\n    { labe: \"Aug\", value: 0 },\n    { labe: \"Sep\", value: 0 },\n    { labe: \"Oct\", value: 0 },\n    { labe: \"Nov\", value: 0 },\n    { labe: \"Dec\", value: 0 },\n  ];\n\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoint={chartDataPoints} />;\n};\n\nexport default ExpenseChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,eAAe,GAAG,CACtB;IAAEC,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC1B;EAED,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACvD;EACA,oBAAOX,OAAA,CAACF,KAAK;IAACc,SAAS,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C,CAAC;AAACC,EAAA,GArBIhB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}